#!/bin/bash

set -ex

apt-get update


if [ -f /output/bindep/run.txt ] ; then
    PACKAGES=$(cat /output/bindep/run.txt)
    if [ ! -z "$PACKAGES" ]; then
	apt-get install -y --no-install-recommends $PACKAGES
    fi
fi



# If there's a constraints file, use it.
if [ -f /output/upper-constraints.txt ] ; then
    CONSTRAINTS="-c /output/upper-constraints.txt"
fi

# If a requirements.txt file exists,
# install it directly so that people can use git url syntax
# to do things like pick up patched but unreleased versions
# of dependencies.
if [ -f /output/requirements.txt ] ; then
    pip3 install $CONSTRAINTS --cache-dir=/output/wheels -r /output/requirements.txt
fi

# Add any requested extras to the list of things to install
EXTRAS=""
for extra in $* ; do
    EXTRAS="${EXTRAS} -r /output/$extra/requirements.txt"
done

if [ -f /output/packages.txt ] ; then
  # If a package list was passed to assemble, install that in the final
  # image.
  pip3 install $CONSTRAINTS --cache-dir=/output/wheels -r /output/packages.txt $EXTRAS
else
  # Install the wheels. Uninstall any existing version as siblings maybe
  # be built with the same version number as the latest release, but we
  # really want the speculatively built wheels installed over any
  # automatic dependencies.
  # NOTE(pabelanger): It is possible a project may not have a wheel, but does have requirements.txt
  if [ $(ls -1 /output/wheels/*whl 2>/dev/null | wc -l) -gt 0 ]; then
      pip3 uninstall -y /output/wheels/*.whl
      pip3 install $CONSTRAINTS --cache-dir=/output/wheels /output/wheels/*.whl $EXTRAS
  elif [ ! -z "$EXTRAS" ] ; then
      pip3 uninstall -y $EXTRAS
      pip3 install $CONSTRAINTS --cache-dir=/output/wheels $EXTRAS
  fi
fi


rm -rf /var/lib/apt/lists/*
